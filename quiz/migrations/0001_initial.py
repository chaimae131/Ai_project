# Generated by Django 5.2.1 on 2025-06-02 02:31

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('Authentication', '0009_remove_interviewresult_interview_delete_interview_and_more'),
        ('interviewapp', '0005_interview_job_application'),
    ]

    operations = [
        migrations.CreateModel(
            name='TechnicalTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Titre du test')),
                ('description', models.TextField(verbose_name='Description')),
                ('duration_minutes', models.PositiveIntegerField(default=60, verbose_name='Durée (minutes)')),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('job_application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='technical_tests', to='Authentication.jobapplication', verbose_name='Candidature associée')),
            ],
            options={
                'verbose_name': 'Test technique',
                'verbose_name_plural': 'Tests techniques',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TestQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_type', models.CharField(choices=[('QCM', 'Question à choix multiple'), ('OPEN', 'Question ouverte')], max_length=4, verbose_name='Type de question')),
                ('text', models.TextField(verbose_name='Texte de la question')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Ordre')),
                ('option_a', models.TextField(blank=True, null=True, verbose_name='Option A')),
                ('option_b', models.TextField(blank=True, null=True, verbose_name='Option B')),
                ('option_c', models.TextField(blank=True, null=True, verbose_name='Option C')),
                ('option_d', models.TextField(blank=True, null=True, verbose_name='Option D')),
                ('correct_answer', models.CharField(blank=True, choices=[('a', 'A'), ('b', 'B'), ('c', 'C'), ('d', 'D')], max_length=1, null=True, verbose_name='Réponse correcte')),
                ('model_answer', models.TextField(blank=True, null=True, verbose_name='Réponse modèle')),
                ('keywords', models.TextField(blank=True, help_text='Mots-clés importants séparés par des virgules', null=True, verbose_name='Mots-clés')),
                ('skill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Authentication.skill', verbose_name='Compétence évaluée')),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='quiz.technicaltest', verbose_name='Test technique')),
            ],
            options={
                'verbose_name': 'Question de test',
                'verbose_name_plural': 'Questions de test',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='TestSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unique_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('status', models.CharField(choices=[('P', 'En préparation'), ('O', 'En cours'), ('C', 'Terminé'), ('E', 'Évalué')], default='P', max_length=1, verbose_name='Statut')),
                ('started_at', models.DateTimeField(blank=True, null=True, verbose_name='Débuté le')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Terminé le')),
                ('score', models.FloatField(blank=True, null=True, verbose_name='Score')),
                ('max_score', models.FloatField(blank=True, null=True, verbose_name='Score maximum')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_sessions', to='Authentication.candidat', verbose_name='Candidat')),
                ('interview', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='technical_tests', to='interviewapp.interview', verbose_name='Entretien associé')),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='quiz.technicaltest', verbose_name='Test technique')),
            ],
            options={
                'verbose_name': 'Session de test',
                'verbose_name_plural': 'Sessions de test',
                'ordering': ['-created_at'],
                'unique_together': {('candidate', 'test')},
            },
        ),
        migrations.CreateModel(
            name='TestReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('overall_score', models.FloatField(verbose_name='Score global')),
                ('skills_evaluation', models.JSONField(verbose_name='Évaluation par compétence')),
                ('strengths', models.TextField(verbose_name='Points forts')),
                ('weaknesses', models.TextField(verbose_name='Points faibles')),
                ('recommendations', models.TextField(verbose_name='Recommandations')),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('session', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='report', to='quiz.testsession', verbose_name='Session')),
            ],
            options={
                'verbose_name': 'Rapport de test',
                'verbose_name_plural': 'Rapports de test',
                'ordering': ['-generated_at'],
            },
        ),
        migrations.CreateModel(
            name='TestResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer_text', models.TextField(blank=True, null=True, verbose_name='Réponse texte')),
                ('answer_choice', models.CharField(blank=True, choices=[('a', 'A'), ('b', 'B'), ('c', 'C'), ('d', 'D')], max_length=1, null=True, verbose_name='Réponse choix')),
                ('similarity_score', models.FloatField(blank=True, null=True, verbose_name='Score de similarité')),
                ('points_earned', models.FloatField(default=0, verbose_name='Points obtenus')),
                ('feedback', models.TextField(blank=True, null=True, verbose_name='Feedback')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quiz.testquestion', verbose_name='Question')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='quiz.testsession', verbose_name='Session')),
            ],
            options={
                'verbose_name': 'Réponse au test',
                'verbose_name_plural': 'Réponses aux tests',
                'unique_together': {('session', 'question')},
            },
        ),
    ]
